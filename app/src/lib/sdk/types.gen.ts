// This file is auto-generated by @hey-api/openapi-ts

export type BaseRecipe = {
    id?: string;
    name: string;
    description: string;
    cuisine_type: string;
    difficulty_level: string;
    prep_time_minutes: number;
    cook_time_minutes: number;
    servings: number;
    base_ingredients: Array<{
        [key: string]: unknown;
    }>;
    base_steps: Array<{
        [key: string]: unknown;
    }>;
    branch_points: Array<{
        [key: string]: unknown;
    }>;
    base_nutrition: {
        [key: string]: unknown;
    };
    base_cost_estimate: number;
    dietary_tags: Array<string>;
    ingredient_categories: Array<string>;
    image_path?: string | null;
    created_by: string;
    created_at?: string;
    last_updated?: string;
};

export type BodyCookingServiceCompleteCookingSession = {
    session_id: string;
    rating?: number | null;
    notes?: string | null;
    would_make_again?: boolean | null;
};

export type BodyCookingServiceGetCookingSession = {
    session_id: string;
};

export type BodyCookingServiceGetUserCookingSessions = {
    user_id: string;
};

export type BodyCookingServiceMakeCookingDecision = {
    session_id: string;
    branch_point: number;
    choice: string;
};

export type BodyCookingServiceProcessVoiceQuestion = {
    session_id: string;
    question: string;
};

export type BodyCookingServiceStartCookingSession = {
    user_id: string;
    base_recipe_id: string;
};

export type BodyCookingServiceUpdateCurrentStep = {
    session_id: string;
    step_number: number;
};

export type BodyNutritionServiceAddNutritionData = {
    ingredient_name: string;
    serving_size: string;
    calories: number;
    protein_g: number;
    carbs_g: number;
    fat_g: number;
    fiber_g: number;
    sugar_g: number;
    sodium_mg: number;
    category: string;
    vitamin_c_mg?: number | null;
    vitamin_a_iu?: number | null;
    calcium_mg?: number | null;
    iron_mg?: number | null;
    potassium_mg?: number | null;
    cost_per_serving?: number | null;
    allergens?: string | null;
    data_source: string;
};

export type BodyNutritionServiceAnalyzeDietaryCompatibility = {
    ingredients: Array<string>;
    dietary_restrictions: Array<string>;
};

export type BodyNutritionServiceBulkImportNutritionData = {
    nutrition_list: Array<{
        [key: string]: unknown;
    }>;
};

export type BodyNutritionServiceCalculateRecipeNutrition = {
    ingredients: Array<{
        [key: string]: unknown;
    }>;
};

export type BodyNutritionServiceEstimateNutritionFromLlm = {
    ingredient_name: string;
    serving_size: string;
};

export type BodyNutritionServiceGetNutritionByCategory = {
    category: string;
};

export type BodyNutritionServiceGetNutritionData = {
    ingredient_name: string;
};

export type BodyNutritionServiceSearchNutritionData = {
    query: string;
};

export type BodyNutritionServiceUpdateNutritionCost = {
    ingredient_name: string;
    cost_per_serving: number;
};

export type BodyPantryServiceAddPantryItem = {
    user_id: string;
    name: string;
    category: string;
    quantity: number;
    unit: string;
    brand?: string | null;
    barcode?: string | null;
    image_path?: string | null;
    tags?: Array<string> | null;
};

export type BodyPantryServiceGetUserPantry = {
    user_id: string;
};

export type BodyPantryServiceRemovePantryItem = {
    item_id: string;
};

export type BodyPantryServiceSearchPantryItems = {
    user_id: string;
    query: string;
};

export type BodyPantryServiceUpdatePantryItemQuantity = {
    item_id: string;
    new_quantity: number;
};

export type BodyRecipeServiceCreateBaseRecipe = {
    name: string;
    description: string;
    cuisine_type: string;
    difficulty_level: string;
    prep_time_minutes: number;
    cook_time_minutes: number;
    servings: number;
    base_ingredients: Array<{
        [key: string]: unknown;
    }>;
    base_steps: Array<{
        [key: string]: unknown;
    }>;
    branch_points: Array<{
        [key: string]: unknown;
    }>;
    dietary_tags: Array<string>;
};

export type BodyRecipeServiceGenerateRecipeFromIngredients = {
    ingredient_list: Array<string>;
    cuisine_preference?: string | null;
    dietary_restrictions?: Array<string> | null;
};

export type BodyRecipeServiceGetRecipeById = {
    recipe_id: string;
};

export type BodyRecipeServiceGetRecipeRecommendations = {
    user_id: string;
    preferences?: string | null;
    dietary_restrictions?: Array<string> | null;
};

export type BodyCookingServiceAddCookingPhoto = {
    photo: Blob | File;
    session_id: string;
    step_number: number;
};

export type BodyPantryServiceScanPantryItems = {
    image: Blob | File;
    user_id: string;
};

export type CookingSession = {
    id?: string;
    user_id: string;
    base_recipe_id: string;
    status: string;
    started_at?: string;
    completed_at?: string | null;
    decisions_made: Array<{
        [key: string]: unknown;
    }>;
    current_step: number;
    final_ingredients: Array<{
        [key: string]: unknown;
    }>;
    final_steps: Array<{
        [key: string]: unknown;
    }>;
    final_nutrition: {
        [key: string]: unknown;
    };
    final_cost: number;
    total_time_minutes: number;
    session_photos: Array<string>;
    voice_interactions: Array<{
        [key: string]: unknown;
    }>;
    notes?: string | null;
    shared?: boolean;
    share_url?: string | null;
    rating?: number | null;
    would_make_again?: boolean | null;
    created_at?: string;
    last_updated?: string;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type NutritionData = {
    id?: string;
    ingredient_name: string;
    serving_size: string;
    calories: number;
    protein_g: number;
    carbs_g: number;
    fat_g: number;
    fiber_g: number;
    sugar_g: number;
    sodium_mg: number;
    vitamin_c_mg?: number | null;
    vitamin_a_iu?: number | null;
    calcium_mg?: number | null;
    iron_mg?: number | null;
    potassium_mg?: number | null;
    cost_per_serving?: number | null;
    allergens?: string | null;
    category: string;
    data_source: string;
    verified?: boolean;
    created_at?: string;
    last_updated?: string;
};

export type PantryItem = {
    id?: string;
    user_id: string;
    name: string;
    brand?: string | null;
    category: string;
    quantity: number;
    unit: string;
    expiration_date?: string | null;
    barcode?: string | null;
    image_path?: string | null;
    nutrition_per_unit?: {
        [key: string]: unknown;
    } | null;
    cost_per_unit?: number | null;
    tags: Array<string>;
    last_updated?: string;
    created_at?: string;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type PantryServiceScanPantryItemsData = {
    body: BodyPantryServiceScanPantryItems;
    path?: never;
    query?: never;
    url: '/api/pantry_service/scan_pantry_items';
};

export type PantryServiceScanPantryItemsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PantryServiceScanPantryItemsError = PantryServiceScanPantryItemsErrors[keyof PantryServiceScanPantryItemsErrors];

export type PantryServiceScanPantryItemsResponses = {
    /**
     * Successful Response
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type PantryServiceScanPantryItemsResponse = PantryServiceScanPantryItemsResponses[keyof PantryServiceScanPantryItemsResponses];

export type PantryServiceAddPantryItemData = {
    body: BodyPantryServiceAddPantryItem;
    path?: never;
    query?: never;
    url: '/api/pantry_service/add_pantry_item';
};

export type PantryServiceAddPantryItemErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PantryServiceAddPantryItemError = PantryServiceAddPantryItemErrors[keyof PantryServiceAddPantryItemErrors];

export type PantryServiceAddPantryItemResponses = {
    /**
     * Successful Response
     */
    200: PantryItem;
};

export type PantryServiceAddPantryItemResponse = PantryServiceAddPantryItemResponses[keyof PantryServiceAddPantryItemResponses];

export type PantryServiceGetUserPantryData = {
    body: BodyPantryServiceGetUserPantry;
    path?: never;
    query?: never;
    url: '/api/pantry_service/get_user_pantry';
};

export type PantryServiceGetUserPantryErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PantryServiceGetUserPantryError = PantryServiceGetUserPantryErrors[keyof PantryServiceGetUserPantryErrors];

export type PantryServiceGetUserPantryResponses = {
    /**
     * Successful Response
     */
    200: Array<PantryItem>;
};

export type PantryServiceGetUserPantryResponse = PantryServiceGetUserPantryResponses[keyof PantryServiceGetUserPantryResponses];

export type PantryServiceUpdatePantryItemQuantityData = {
    body: BodyPantryServiceUpdatePantryItemQuantity;
    path?: never;
    query?: never;
    url: '/api/pantry_service/update_pantry_item_quantity';
};

export type PantryServiceUpdatePantryItemQuantityErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PantryServiceUpdatePantryItemQuantityError = PantryServiceUpdatePantryItemQuantityErrors[keyof PantryServiceUpdatePantryItemQuantityErrors];

export type PantryServiceUpdatePantryItemQuantityResponses = {
    /**
     * Successful Response
     */
    200: PantryItem;
};

export type PantryServiceUpdatePantryItemQuantityResponse = PantryServiceUpdatePantryItemQuantityResponses[keyof PantryServiceUpdatePantryItemQuantityResponses];

export type PantryServiceRemovePantryItemData = {
    body: BodyPantryServiceRemovePantryItem;
    path?: never;
    query?: never;
    url: '/api/pantry_service/remove_pantry_item';
};

export type PantryServiceRemovePantryItemErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PantryServiceRemovePantryItemError = PantryServiceRemovePantryItemErrors[keyof PantryServiceRemovePantryItemErrors];

export type PantryServiceRemovePantryItemResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type PantryServiceRemovePantryItemResponse = PantryServiceRemovePantryItemResponses[keyof PantryServiceRemovePantryItemResponses];

export type PantryServiceSearchPantryItemsData = {
    body: BodyPantryServiceSearchPantryItems;
    path?: never;
    query?: never;
    url: '/api/pantry_service/search_pantry_items';
};

export type PantryServiceSearchPantryItemsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PantryServiceSearchPantryItemsError = PantryServiceSearchPantryItemsErrors[keyof PantryServiceSearchPantryItemsErrors];

export type PantryServiceSearchPantryItemsResponses = {
    /**
     * Successful Response
     */
    200: Array<PantryItem>;
};

export type PantryServiceSearchPantryItemsResponse = PantryServiceSearchPantryItemsResponses[keyof PantryServiceSearchPantryItemsResponses];

export type RecipeServiceGetRecipeRecommendationsData = {
    body: BodyRecipeServiceGetRecipeRecommendations;
    path?: never;
    query?: never;
    url: '/api/recipe_service/get_recipe_recommendations';
};

export type RecipeServiceGetRecipeRecommendationsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RecipeServiceGetRecipeRecommendationsError = RecipeServiceGetRecipeRecommendationsErrors[keyof RecipeServiceGetRecipeRecommendationsErrors];

export type RecipeServiceGetRecipeRecommendationsResponses = {
    /**
     * Successful Response
     */
    200: Array<{
        [key: string]: unknown;
    }>;
};

export type RecipeServiceGetRecipeRecommendationsResponse = RecipeServiceGetRecipeRecommendationsResponses[keyof RecipeServiceGetRecipeRecommendationsResponses];

export type RecipeServiceGetRecipeByIdData = {
    body: BodyRecipeServiceGetRecipeById;
    path?: never;
    query?: never;
    url: '/api/recipe_service/get_recipe_by_id';
};

export type RecipeServiceGetRecipeByIdErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RecipeServiceGetRecipeByIdError = RecipeServiceGetRecipeByIdErrors[keyof RecipeServiceGetRecipeByIdErrors];

export type RecipeServiceGetRecipeByIdResponses = {
    /**
     * Successful Response
     */
    200: BaseRecipe | null;
};

export type RecipeServiceGetRecipeByIdResponse = RecipeServiceGetRecipeByIdResponses[keyof RecipeServiceGetRecipeByIdResponses];

export type RecipeServiceCreateBaseRecipeData = {
    body: BodyRecipeServiceCreateBaseRecipe;
    path?: never;
    query?: never;
    url: '/api/recipe_service/create_base_recipe';
};

export type RecipeServiceCreateBaseRecipeErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RecipeServiceCreateBaseRecipeError = RecipeServiceCreateBaseRecipeErrors[keyof RecipeServiceCreateBaseRecipeErrors];

export type RecipeServiceCreateBaseRecipeResponses = {
    /**
     * Successful Response
     */
    200: BaseRecipe;
};

export type RecipeServiceCreateBaseRecipeResponse = RecipeServiceCreateBaseRecipeResponses[keyof RecipeServiceCreateBaseRecipeResponses];

export type RecipeServiceGenerateRecipeFromIngredientsData = {
    body: BodyRecipeServiceGenerateRecipeFromIngredients;
    path?: never;
    query?: never;
    url: '/api/recipe_service/generate_recipe_from_ingredients';
};

export type RecipeServiceGenerateRecipeFromIngredientsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RecipeServiceGenerateRecipeFromIngredientsError = RecipeServiceGenerateRecipeFromIngredientsErrors[keyof RecipeServiceGenerateRecipeFromIngredientsErrors];

export type RecipeServiceGenerateRecipeFromIngredientsResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type RecipeServiceGenerateRecipeFromIngredientsResponse = RecipeServiceGenerateRecipeFromIngredientsResponses[keyof RecipeServiceGenerateRecipeFromIngredientsResponses];

export type CookingServiceStartCookingSessionData = {
    body: BodyCookingServiceStartCookingSession;
    path?: never;
    query?: never;
    url: '/api/cooking_service/start_cooking_session';
};

export type CookingServiceStartCookingSessionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CookingServiceStartCookingSessionError = CookingServiceStartCookingSessionErrors[keyof CookingServiceStartCookingSessionErrors];

export type CookingServiceStartCookingSessionResponses = {
    /**
     * Successful Response
     */
    200: CookingSession;
};

export type CookingServiceStartCookingSessionResponse = CookingServiceStartCookingSessionResponses[keyof CookingServiceStartCookingSessionResponses];

export type CookingServiceMakeCookingDecisionData = {
    body: BodyCookingServiceMakeCookingDecision;
    path?: never;
    query?: never;
    url: '/api/cooking_service/make_cooking_decision';
};

export type CookingServiceMakeCookingDecisionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CookingServiceMakeCookingDecisionError = CookingServiceMakeCookingDecisionErrors[keyof CookingServiceMakeCookingDecisionErrors];

export type CookingServiceMakeCookingDecisionResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type CookingServiceMakeCookingDecisionResponse = CookingServiceMakeCookingDecisionResponses[keyof CookingServiceMakeCookingDecisionResponses];

export type CookingServiceProcessVoiceQuestionData = {
    body: BodyCookingServiceProcessVoiceQuestion;
    path?: never;
    query?: never;
    url: '/api/cooking_service/process_voice_question';
};

export type CookingServiceProcessVoiceQuestionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CookingServiceProcessVoiceQuestionError = CookingServiceProcessVoiceQuestionErrors[keyof CookingServiceProcessVoiceQuestionErrors];

export type CookingServiceProcessVoiceQuestionResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type CookingServiceProcessVoiceQuestionResponse = CookingServiceProcessVoiceQuestionResponses[keyof CookingServiceProcessVoiceQuestionResponses];

export type CookingServiceAddCookingPhotoData = {
    body: BodyCookingServiceAddCookingPhoto;
    path?: never;
    query?: never;
    url: '/api/cooking_service/add_cooking_photo';
};

export type CookingServiceAddCookingPhotoErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CookingServiceAddCookingPhotoError = CookingServiceAddCookingPhotoErrors[keyof CookingServiceAddCookingPhotoErrors];

export type CookingServiceAddCookingPhotoResponses = {
    /**
     * Successful Response
     */
    200: string;
};

export type CookingServiceAddCookingPhotoResponse = CookingServiceAddCookingPhotoResponses[keyof CookingServiceAddCookingPhotoResponses];

export type CookingServiceUpdateCurrentStepData = {
    body: BodyCookingServiceUpdateCurrentStep;
    path?: never;
    query?: never;
    url: '/api/cooking_service/update_current_step';
};

export type CookingServiceUpdateCurrentStepErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CookingServiceUpdateCurrentStepError = CookingServiceUpdateCurrentStepErrors[keyof CookingServiceUpdateCurrentStepErrors];

export type CookingServiceUpdateCurrentStepResponses = {
    /**
     * Successful Response
     */
    200: CookingSession;
};

export type CookingServiceUpdateCurrentStepResponse = CookingServiceUpdateCurrentStepResponses[keyof CookingServiceUpdateCurrentStepResponses];

export type CookingServiceCompleteCookingSessionData = {
    body: BodyCookingServiceCompleteCookingSession;
    path?: never;
    query?: never;
    url: '/api/cooking_service/complete_cooking_session';
};

export type CookingServiceCompleteCookingSessionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CookingServiceCompleteCookingSessionError = CookingServiceCompleteCookingSessionErrors[keyof CookingServiceCompleteCookingSessionErrors];

export type CookingServiceCompleteCookingSessionResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type CookingServiceCompleteCookingSessionResponse = CookingServiceCompleteCookingSessionResponses[keyof CookingServiceCompleteCookingSessionResponses];

export type CookingServiceGetCookingSessionData = {
    body: BodyCookingServiceGetCookingSession;
    path?: never;
    query?: never;
    url: '/api/cooking_service/get_cooking_session';
};

export type CookingServiceGetCookingSessionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CookingServiceGetCookingSessionError = CookingServiceGetCookingSessionErrors[keyof CookingServiceGetCookingSessionErrors];

export type CookingServiceGetCookingSessionResponses = {
    /**
     * Successful Response
     */
    200: CookingSession | null;
};

export type CookingServiceGetCookingSessionResponse = CookingServiceGetCookingSessionResponses[keyof CookingServiceGetCookingSessionResponses];

export type CookingServiceGetUserCookingSessionsData = {
    body: BodyCookingServiceGetUserCookingSessions;
    path?: never;
    query?: never;
    url: '/api/cooking_service/get_user_cooking_sessions';
};

export type CookingServiceGetUserCookingSessionsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CookingServiceGetUserCookingSessionsError = CookingServiceGetUserCookingSessionsErrors[keyof CookingServiceGetUserCookingSessionsErrors];

export type CookingServiceGetUserCookingSessionsResponses = {
    /**
     * Successful Response
     */
    200: Array<CookingSession>;
};

export type CookingServiceGetUserCookingSessionsResponse = CookingServiceGetUserCookingSessionsResponses[keyof CookingServiceGetUserCookingSessionsResponses];

export type NutritionServiceAddNutritionDataData = {
    body: BodyNutritionServiceAddNutritionData;
    path?: never;
    query?: never;
    url: '/api/nutrition_service/add_nutrition_data';
};

export type NutritionServiceAddNutritionDataErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type NutritionServiceAddNutritionDataError = NutritionServiceAddNutritionDataErrors[keyof NutritionServiceAddNutritionDataErrors];

export type NutritionServiceAddNutritionDataResponses = {
    /**
     * Successful Response
     */
    200: NutritionData;
};

export type NutritionServiceAddNutritionDataResponse = NutritionServiceAddNutritionDataResponses[keyof NutritionServiceAddNutritionDataResponses];

export type NutritionServiceGetNutritionDataData = {
    body: BodyNutritionServiceGetNutritionData;
    path?: never;
    query?: never;
    url: '/api/nutrition_service/get_nutrition_data';
};

export type NutritionServiceGetNutritionDataErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type NutritionServiceGetNutritionDataError = NutritionServiceGetNutritionDataErrors[keyof NutritionServiceGetNutritionDataErrors];

export type NutritionServiceGetNutritionDataResponses = {
    /**
     * Successful Response
     */
    200: NutritionData | null;
};

export type NutritionServiceGetNutritionDataResponse = NutritionServiceGetNutritionDataResponses[keyof NutritionServiceGetNutritionDataResponses];

export type NutritionServiceSearchNutritionDataData = {
    body: BodyNutritionServiceSearchNutritionData;
    path?: never;
    query?: never;
    url: '/api/nutrition_service/search_nutrition_data';
};

export type NutritionServiceSearchNutritionDataErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type NutritionServiceSearchNutritionDataError = NutritionServiceSearchNutritionDataErrors[keyof NutritionServiceSearchNutritionDataErrors];

export type NutritionServiceSearchNutritionDataResponses = {
    /**
     * Successful Response
     */
    200: Array<NutritionData>;
};

export type NutritionServiceSearchNutritionDataResponse = NutritionServiceSearchNutritionDataResponses[keyof NutritionServiceSearchNutritionDataResponses];

export type NutritionServiceCalculateRecipeNutritionData = {
    body: BodyNutritionServiceCalculateRecipeNutrition;
    path?: never;
    query?: never;
    url: '/api/nutrition_service/calculate_recipe_nutrition';
};

export type NutritionServiceCalculateRecipeNutritionErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type NutritionServiceCalculateRecipeNutritionError = NutritionServiceCalculateRecipeNutritionErrors[keyof NutritionServiceCalculateRecipeNutritionErrors];

export type NutritionServiceCalculateRecipeNutritionResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type NutritionServiceCalculateRecipeNutritionResponse = NutritionServiceCalculateRecipeNutritionResponses[keyof NutritionServiceCalculateRecipeNutritionResponses];

export type NutritionServiceEstimateNutritionFromLlmData = {
    body: BodyNutritionServiceEstimateNutritionFromLlm;
    path?: never;
    query?: never;
    url: '/api/nutrition_service/estimate_nutrition_from_llm';
};

export type NutritionServiceEstimateNutritionFromLlmErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type NutritionServiceEstimateNutritionFromLlmError = NutritionServiceEstimateNutritionFromLlmErrors[keyof NutritionServiceEstimateNutritionFromLlmErrors];

export type NutritionServiceEstimateNutritionFromLlmResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type NutritionServiceEstimateNutritionFromLlmResponse = NutritionServiceEstimateNutritionFromLlmResponses[keyof NutritionServiceEstimateNutritionFromLlmResponses];

export type NutritionServiceBulkImportNutritionDataData = {
    body: BodyNutritionServiceBulkImportNutritionData;
    path?: never;
    query?: never;
    url: '/api/nutrition_service/bulk_import_nutrition_data';
};

export type NutritionServiceBulkImportNutritionDataErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type NutritionServiceBulkImportNutritionDataError = NutritionServiceBulkImportNutritionDataErrors[keyof NutritionServiceBulkImportNutritionDataErrors];

export type NutritionServiceBulkImportNutritionDataResponses = {
    /**
     * Successful Response
     */
    200: Array<NutritionData>;
};

export type NutritionServiceBulkImportNutritionDataResponse = NutritionServiceBulkImportNutritionDataResponses[keyof NutritionServiceBulkImportNutritionDataResponses];

export type NutritionServiceGetNutritionByCategoryData = {
    body: BodyNutritionServiceGetNutritionByCategory;
    path?: never;
    query?: never;
    url: '/api/nutrition_service/get_nutrition_by_category';
};

export type NutritionServiceGetNutritionByCategoryErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type NutritionServiceGetNutritionByCategoryError = NutritionServiceGetNutritionByCategoryErrors[keyof NutritionServiceGetNutritionByCategoryErrors];

export type NutritionServiceGetNutritionByCategoryResponses = {
    /**
     * Successful Response
     */
    200: Array<NutritionData>;
};

export type NutritionServiceGetNutritionByCategoryResponse = NutritionServiceGetNutritionByCategoryResponses[keyof NutritionServiceGetNutritionByCategoryResponses];

export type NutritionServiceUpdateNutritionCostData = {
    body: BodyNutritionServiceUpdateNutritionCost;
    path?: never;
    query?: never;
    url: '/api/nutrition_service/update_nutrition_cost';
};

export type NutritionServiceUpdateNutritionCostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type NutritionServiceUpdateNutritionCostError = NutritionServiceUpdateNutritionCostErrors[keyof NutritionServiceUpdateNutritionCostErrors];

export type NutritionServiceUpdateNutritionCostResponses = {
    /**
     * Successful Response
     */
    200: NutritionData | null;
};

export type NutritionServiceUpdateNutritionCostResponse = NutritionServiceUpdateNutritionCostResponses[keyof NutritionServiceUpdateNutritionCostResponses];

export type NutritionServiceAnalyzeDietaryCompatibilityData = {
    body: BodyNutritionServiceAnalyzeDietaryCompatibility;
    path?: never;
    query?: never;
    url: '/api/nutrition_service/analyze_dietary_compatibility';
};

export type NutritionServiceAnalyzeDietaryCompatibilityErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type NutritionServiceAnalyzeDietaryCompatibilityError = NutritionServiceAnalyzeDietaryCompatibilityErrors[keyof NutritionServiceAnalyzeDietaryCompatibilityErrors];

export type NutritionServiceAnalyzeDietaryCompatibilityResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type NutritionServiceAnalyzeDietaryCompatibilityResponse = NutritionServiceAnalyzeDietaryCompatibilityResponses[keyof NutritionServiceAnalyzeDietaryCompatibilityResponses];